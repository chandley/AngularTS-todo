var ToDos;!function(o){var t=["ui.router","todos.root","todos.main"];o.appModule=angular.module("todos",t),o.appModule.config(["$stateProvider","$urlRouterProvider",function(o,t){o.state({name:"root",url:"/",templateUrl:"root/root.html",controller:"RootController",controllerAs:"rootCtrl"}),t.otherwise("/")}])}(ToDos||(ToDos={}));var ToDos;!function(o){o.rootModule=angular.module("todos.root",[])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(){this.messages=["Welcome","New version is out"],this.showMessages=!0}return o.prototype.toggleMessages=function(){this.showMessages=!this.showMessages},o}();o.rootModule.controller("RootController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){var t=["ui.router"];o.todosModule=angular.module("todos.main",t),o.todosModule.config(["$stateProvider",function(o){o.state({name:"root.todos",url:"todos",templateUrl:"/todos/list.html",controller:"ListController",controllerAs:"listCtrl"})}])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o,t){var r=this;this.todoService=o,this.$window=t,o.list().then(function(o){r.todos=o})["catch"](function(o){t.console.log(o)})}return o.$inject=["todoService","$window"],o}();o.todosModule.controller("ListController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o){this.$http=o}return o.$inject=["$http"],o.prototype.list=function(){return this.$http.get("/api/todos").then(function(o){return o.data})},o}();o.ToDoService=t,o.todosModule.service("todoService",t)}(ToDos||(ToDos={}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyIsInJvb3QvbW9kdWxlLnRzIiwicm9vdC9Sb290Q29udHJvbGxlci50cyIsInRvZG9zL21vZHVsZS50cyIsInRvZG9zL0xpc3RDb250cm9sbGVyLnRzIiwiYXBwLmpzIiwidG9kb3MvVG9Eb1NlcnZpY2UudHMiXSwibmFtZXMiOlsiVG9Eb3MiLCJUb0Rvcy5Sb290Q29udHJvbGxlciIsIlRvRG9zLlJvb3RDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiVG9Eb3MuUm9vdENvbnRyb2xsZXIudG9nZ2xlTWVzc2FnZXMiLCJUb0Rvcy5MaXN0Q29udHJvbGxlciIsIlRvRG9zLkxpc3RDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiTGlzdENvbnRyb2xsZXIiLCIkaW5qZWN0IiwiVG9Eb3MuVG9Eb1NlcnZpY2UiLCJUb0Rvcy5Ub0RvU2VydmljZS5jb25zdHJ1Y3RvciIsIlRvRG9TZXJ2aWNlIiwiVG9Eb3MuVG9Eb1NlcnZpY2UubGlzdCJdLCJtYXBwaW5ncyI6IkFBSUEsR0FBVUEsUUFBVixTQUFVQSxHQUVOQSxHQUFJQSxJQUNBQSxZQUNBQSxhQUNBQSxhQUVPQSxHQUFBQSxVQUFZQSxRQUFRQSxPQUFPQSxRQUFTQSxHQUUvQ0EsRUFBQUEsVUFBVUEsUUFBQUEsaUJBQUFBLHFCQUNOQSxTQUFDQSxFQUNEQSxHQUVBQSxFQUNLQSxPQUNHQSxLQUFNQSxPQUNOQSxJQUFLQSxJQUNMQSxZQUFhQSxpQkFDYkEsV0FBWUEsaUJBQ1pBLGFBQWNBLGFBR2xCQSxFQUFtQkEsVUFBVUEsU0F0Qi9CQSxRQUFBQSxVQ0FWLElBQVVBLFFBQVYsU0FBVUEsR0FFS0EsRUFBQUEsV0FBYUEsUUFBUUEsT0FBT0Esa0JBRmpDQSxRQUFBQSxVQ0NWLElBQVVBLFFBQVYsU0FBVUEsR0FFTkEsR0FBQUEsR0FBQUEsV0FBQUMsUUFBQUEsS0FDV0MsS0FBQUEsVUFDSEEsVUFDQUEsc0JBR0dBLEtBQUFBLGNBQWVBLEVBSTFCRCxNQUhXQSxHQUFBQSxVQUFBQSxlQUFQQSxXQUNJRSxLQUFLQSxjQUFnQkEsS0FBS0EsY0FFbENGLElBRUFELEdBQUFBLFdBQVdBLFdBQVdBLGlCQUFrQkEsSUFkbENBLFFBQUFBLFVDRFYsSUFBVUEsUUFBVixTQUFVQSxHQUVOQSxHQUFJQSxJQUNBQSxZQUdPQSxHQUFBQSxZQUFjQSxRQUFRQSxPQUFPQSxhQUFjQSxHQUV0REEsRUFBQUEsWUFBWUEsUUFBQUEsaUJBQU9BLFNBQUNBLEdBRWhCQSxFQUFlQSxPQUNYQSxLQUFNQSxhQUNOQSxJQUFLQSxRQUNMQSxZQUFhQSxtQkFDYkEsV0FBWUEsaUJBQ1pBLGFBQWNBLGlCQWZoQkEsUUFBQUEsVUNGVixJQUFVQSxRQUFWLFNBQVVBLEdBV05BLEdBQUFBLEdBQUFBLFdBR0lJLFFBQUFBLEdBQW9CQSxFQUNBQSxHQUp4QkMsR0FBQUEsR0FBQUEsSUFHd0JBLE1BQUFBLFlBQUFBLEVBQ0FBLEtBQUFBLFFBQUFBLEVBRWhCQSxFQUFZQSxPQUNQQSxLQUFLQSxTQUFDQSxHQUNIQSxFQUFLQSxNQUFRQSxJQUZyQkEsU0FJV0EsU0FBQ0EsR0FDSkEsRUFBUUEsUUFBUUEsSUFBSUEsS0FJcENELE1DOERJRSxHQUFlQyxTQUFXLGNBQWUsV0Q5RDdDSCxJQUVBSixHQUFBQSxZQUFZQSxXQUFXQSxpQkFBa0JBLElBNUJuQ0EsUUFBQUEsVUVBVixJQUFVQSxRQUFWLFNBQVVBLEdBRU5BLEdBQUFBLEdBQUFBLFdBRUlRLFFBQUFBLEdBQW9CQSxHQUFBQyxLQUFBQSxNQUFBQSxFQVl4QkQsTURxRklFLEdBQVlILFNBQVcsU0M3RmhCQyxFQUFBQSxVQUFBQSxLQUFQQSxXQUVJRyxNQUFPQSxNQUFLQSxNQUFNQSxJQUFZQSxjQUMxQkEsS0FBS0EsU0FBQ0EsR0FDRkEsTUFBT0EsR0FBU0EsUUFJaENILElBZGFSLEdBQUFBLFlBQVdBLEVBZ0J4QkEsRUFBQUEsWUFBWUEsUUFBUUEsY0FBZUEsSUFsQjdCQSxRQUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgdmFyIGRlcHMgPSBbXG4gICAgICAgIFwidWkucm91dGVyXCIsXG4gICAgICAgIFwidG9kb3Mucm9vdFwiLFxuICAgICAgICBcInRvZG9zLm1haW5cIlxuICAgIF1cbiAgICBleHBvcnQgdmFyIGFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3NcIiwgZGVwcyk7XG5cbiAgICBhcHBNb2R1bGUuY29uZmlnKFxuICAgICAgICAoJHN0YXRlUHJvdmlkZXI6IGFuZ3VsYXIudWkuSVN0YXRlUHJvdmlkZXIsXG4gICAgICAgICR1cmxSb3V0ZXJQcm92aWRlcjogYW5ndWxhci51aS5JVXJsUm91dGVyUHJvdmlkZXIpID0+IHtcblxuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLnN0YXRlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcInJvb3RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL1wiLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInJvb3Qvcm9vdC5odG1sXCIsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogXCJSb290Q29udHJvbGxlclwiLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogXCJyb290Q3RybFwiXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKFwiL1wiKTtcblxuICAgIH0pXG5cbn1cbiIsIi8qKlxuICogQ3JlYXRlZCBieSBjaHJpc2hhIG9uIDAzLzA5LzE1LlxuICovXG5cbm5hbWVzcGFjZSBUb0RvcyB7XG5cbiAgICBleHBvcnQgdmFyIHJvb3RNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZShcInRvZG9zLnJvb3RcIiwgW10pO1xuXG59IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGNocmlzaGEgb24gMDMvMDkvMTUuXG4gKi9cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIm1vZHVsZS50c1wiIC8+XG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgY2xhc3MgUm9vdENvbnRyb2xsZXIge1xuICAgICAgICBwdWJsaWMgbWVzc2FnZXM6IHN0cmluZ1tdID0gW1xuICAgICAgICAgICAgXCJXZWxjb21lXCIsXG4gICAgICAgICAgICBcIk5ldyB2ZXJzaW9uIGlzIG91dFwiXG4gICAgICAgIF07XG5cbiAgICAgICAgcHVibGljIHNob3dNZXNzYWdlcyA9IHRydWU7XG4gICAgICAgIHB1YmxpYyB0b2dnbGVNZXNzYWdlcygpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd01lc3NhZ2VzID0gIXRoaXMuc2hvd01lc3NhZ2VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcm9vdE1vZHVsZS5jb250cm9sbGVyKFwiUm9vdENvbnRyb2xsZXJcIiwgUm9vdENvbnRyb2xsZXIpXG59XG4iLCIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgdmFyIGRlcHMgPSBbXG4gICAgICAgIFwidWkucm91dGVyXCJcbiAgICBdXG5cbiAgICBleHBvcnQgdmFyIHRvZG9zTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoXCJ0b2Rvcy5tYWluXCIsIGRlcHMpO1xuXG4gICAgdG9kb3NNb2R1bGUuY29uZmlnKCgkc3RhdGVQcm92aWRlcjogYW5ndWxhci51aS5JU3RhdGVQcm92aWRlcikgPT4ge1xuXG4gICAgICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IFwicm9vdC50b2Rvc1wiLFxuICAgICAgICAgICAgdXJsOiBcInRvZG9zXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIvdG9kb3MvbGlzdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBcIkxpc3RDb250cm9sbGVyXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6IFwibGlzdEN0cmxcIlxuICAgICAgICB9KTtcbiAgICB9KVxuXG59XG4iLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwibW9kdWxlLnRzXCIgLz5cblxubmFtZXNwYWNlIFRvRG9zIHtcblxuICAgIGludGVyZmFjZSBUb0RvIHtcbiAgICAgICAgaWQ6IHN0cmluZztcbiAgICAgICAgdGV4dDogc3RyaW5nO1xuICAgICAgICB0YWdzOiBzdHJpbmdbXTsgLy8gYWN0dWFsbCBkYXRlc1xuICAgICAgICBkdWU6IHN0cmluZzsgLy8gYWN0dWFsbCBkYXRlXG4gICAgICAgIGRvbmU6IHN0cmluZzsgLy8gYWN0dWFsbCBkYXRlXG5cbiAgICB9XG5cbiAgICBjbGFzcyBMaXN0Q29udHJvbGxlciB7XG4gICAgICAgIHB1YmxpYyB0b2RvczogVG9Eb1tdO1xuXG4gICAgICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdG9kb1NlcnZpY2U6IFRvRG9TZXJ2aWNlLFxuICAgICAgICAgICAgICAgICAgICBwcml2YXRlICR3aW5kb3c6IGFuZ3VsYXIuSVdpbmRvd1NlcnZpY2UpIHtcblxuICAgICAgICAgICAgdG9kb1NlcnZpY2UubGlzdCgpXG4gICAgICAgICAgICAgICAgLnRoZW4oKHRvZG9zKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG9kb3MgPSB0b2RvcztcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgJHdpbmRvdy5jb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHRvZG9zTW9kdWxlLmNvbnRyb2xsZXIoXCJMaXN0Q29udHJvbGxlclwiLCBMaXN0Q29udHJvbGxlcik7XG5cbn0iLCIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBkZXBzID0gW1xuICAgICAgICBcInVpLnJvdXRlclwiLFxuICAgICAgICBcInRvZG9zLnJvb3RcIixcbiAgICAgICAgXCJ0b2Rvcy5tYWluXCJcbiAgICBdO1xuICAgIFRvRG9zLmFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3NcIiwgZGVwcyk7XG4gICAgVG9Eb3MuYXBwTW9kdWxlLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLnN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IFwicm9vdFwiLFxuICAgICAgICAgICAgdXJsOiBcIi9cIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInJvb3Qvcm9vdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBcIlJvb3RDb250cm9sbGVyXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6IFwicm9vdEN0cmxcIlxuICAgICAgICB9KTtcbiAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XG4gICAgfSk7XG59KShUb0RvcyB8fCAoVG9Eb3MgPSB7fSkpO1xuXG4vKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIFRvRG9zLnJvb3RNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZShcInRvZG9zLnJvb3RcIiwgW10pO1xufSkoVG9Eb3MgfHwgKFRvRG9zID0ge30pKTtcblxuLyoqXG4gKiBDcmVhdGVkIGJ5IGNocmlzaGEgb24gMDMvMDkvMTUuXG4gKi9cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJtb2R1bGUudHNcIiAvPlxudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBSb290Q29udHJvbGxlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIFJvb3RDb250cm9sbGVyKCkge1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtcbiAgICAgICAgICAgICAgICBcIldlbGNvbWVcIixcbiAgICAgICAgICAgICAgICBcIk5ldyB2ZXJzaW9uIGlzIG91dFwiXG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgdGhpcy5zaG93TWVzc2FnZXMgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIFJvb3RDb250cm9sbGVyLnByb3RvdHlwZS50b2dnbGVNZXNzYWdlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd01lc3NhZ2VzID0gIXRoaXMuc2hvd01lc3NhZ2VzO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gUm9vdENvbnRyb2xsZXI7XG4gICAgfSkoKTtcbiAgICBUb0Rvcy5yb290TW9kdWxlLmNvbnRyb2xsZXIoXCJSb290Q29udHJvbGxlclwiLCBSb290Q29udHJvbGxlcik7XG59KShUb0RvcyB8fCAoVG9Eb3MgPSB7fSkpO1xuXG4vKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBkZXBzID0gW1xuICAgICAgICBcInVpLnJvdXRlclwiXG4gICAgXTtcbiAgICBUb0Rvcy50b2Rvc01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3MubWFpblwiLCBkZXBzKTtcbiAgICBUb0Rvcy50b2Rvc01vZHVsZS5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IFwicm9vdC50b2Rvc1wiLFxuICAgICAgICAgICAgdXJsOiBcInRvZG9zXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIvdG9kb3MvbGlzdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBcIkxpc3RDb250cm9sbGVyXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6IFwibGlzdEN0cmxcIlxuICAgICAgICB9KTtcbiAgICB9KTtcbn0pKFRvRG9zIHx8IChUb0RvcyA9IHt9KSk7XG5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJtb2R1bGUudHNcIiAvPlxudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBMaXN0Q29udHJvbGxlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIExpc3RDb250cm9sbGVyKHRvZG9TZXJ2aWNlLCAkd2luZG93KSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy50b2RvU2VydmljZSA9IHRvZG9TZXJ2aWNlO1xuICAgICAgICAgICAgdGhpcy4kd2luZG93ID0gJHdpbmRvdztcbiAgICAgICAgICAgIHRvZG9TZXJ2aWNlLmxpc3QoKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh0b2Rvcykge1xuICAgICAgICAgICAgICAgIF90aGlzLnRvZG9zID0gdG9kb3M7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAkd2luZG93LmNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMaXN0Q29udHJvbGxlcjtcbiAgICB9KSgpO1xuICAgIFRvRG9zLnRvZG9zTW9kdWxlLmNvbnRyb2xsZXIoXCJMaXN0Q29udHJvbGxlclwiLCBMaXN0Q29udHJvbGxlcik7XG59KShUb0RvcyB8fCAoVG9Eb3MgPSB7fSkpO1xuXG4vLy9yZWZlcmVuY2UgcGF0aD1cIm1vZHVsZS50c1wiIC8+XG52YXIgVG9Eb3M7XG4oZnVuY3Rpb24gKFRvRG9zKSB7XG4gICAgdmFyIFRvRG9TZXJ2aWNlID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gVG9Eb1NlcnZpY2UoJGh0dHApIHtcbiAgICAgICAgICAgIHRoaXMuJGh0dHAgPSAkaHR0cDtcbiAgICAgICAgfVxuICAgICAgICBUb0RvU2VydmljZS5wcm90b3R5cGUubGlzdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLiRodHRwLmdldChcIi9hcGkvdG9kb3NcIikuXG4gICAgICAgICAgICAgICAgdGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gVG9Eb1NlcnZpY2U7XG4gICAgfSkoKTtcbiAgICBUb0Rvcy5Ub0RvU2VydmljZSA9IFRvRG9TZXJ2aWNlO1xuICAgIFRvRG9zLnRvZG9zTW9kdWxlLnNlcnZpY2UoXCJ0b2RvU2VydmljZVwiLCBUb0RvU2VydmljZSk7XG59KShUb0RvcyB8fCAoVG9Eb3MgPSB7fSkpO1xuIiwiLy8vcmVmZXJlbmNlIHBhdGg9XCJtb2R1bGUudHNcIiAvPlxuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgZXhwb3J0IGNsYXNzIFRvRG9TZXJ2aWNlIHtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRodHRwOiBhbmd1bGFyLklIdHRwU2VydmljZSkge1xuXG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgbGlzdCgpIHtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0PFRvRG9bXT4oXCIvYXBpL3RvZG9zXCIpLlxuICAgICAgICAgICAgICAgIHRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0b2Rvc01vZHVsZS5zZXJ2aWNlKFwidG9kb1NlcnZpY2VcIiwgVG9Eb1NlcnZpY2UpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9