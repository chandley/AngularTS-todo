var ToDos;!function(o){var t=["ui.router","todos.root","todos.main"];o.appModule=angular.module("todos",t),o.appModule.config(["$stateProvider","$urlRouterProvider",function(o,t){o.state({name:"root",url:"/",templateUrl:"root/root.html",controller:"RootController",controllerAs:"rootCtrl"}),t.otherwise("/")}])}(ToDos||(ToDos={}));var ToDos;!function(o){o.rootModule=angular.module("todos.root",[])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(){this.messages=["Welcome","New version is out"]}return o}();o.rootModule.controller("RootController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){o.todosModule=angular.module("todos.main",[])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o){var t=this;this.$http=o,o.get("/api/todos").then(function(o){t.todos=o.data})}return o.$inject=["$http"],o}();o.todosModule.controller("ListController",t)}(ToDos||(ToDos={}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC50cyIsInJvb3QvbW9kdWxlLnRzIiwicm9vdC9Sb290Q29udHJvbGxlci50cyIsInRvZG9zL21vZHVsZS50cyIsInRvZG9zL0xpc3RDb250cm9sbGVyLnRzIiwiYXBwLmpzIl0sIm5hbWVzIjpbIlRvRG9zIiwiVG9Eb3MuUm9vdENvbnRyb2xsZXIiLCJUb0Rvcy5Sb290Q29udHJvbGxlci5jb25zdHJ1Y3RvciIsIlRvRG9zLkxpc3RDb250cm9sbGVyIiwiVG9Eb3MuTGlzdENvbnRyb2xsZXIuY29uc3RydWN0b3IiLCJMaXN0Q29udHJvbGxlciIsIiRpbmplY3QiXSwibWFwcGluZ3MiOiJBQUlBLEdBQVVBLFFBQVYsU0FBVUEsR0FFTkEsR0FBSUEsSUFDQUEsWUFDQUEsYUFDQUEsYUFFT0EsR0FBQUEsVUFBWUEsUUFBUUEsT0FBT0EsUUFBU0EsR0FFL0NBLEVBQUFBLFVBQVVBLFFBQUFBLGlCQUFBQSxxQkFDTkEsU0FBQ0EsRUFDREEsR0FFQUEsRUFDS0EsT0FDR0EsS0FBTUEsT0FDTkEsSUFBS0EsSUFDTEEsWUFBYUEsaUJBQ2JBLFdBQVlBLGlCQUNaQSxhQUFjQSxhQUdsQkEsRUFBbUJBLFVBQVVBLFNBdEIvQkEsUUFBQUEsVUNBVixJQUFVQSxRQUFWLFNBQVVBLEdBRUtBLEVBQUFBLFdBQWFBLFFBQVFBLE9BQU9BLGtCQUZqQ0EsUUFBQUEsVUNDVixJQUFVQSxRQUFWLFNBQVVBLEdBRU5BLEdBQUFBLEdBQUFBLFdBQUFDLFFBQUFBLEtBQ1dDLEtBQUFBLFVBQ0hBLFVBQ0FBLHNCQUVSRCxNQUFBQSxLQUVBRCxHQUFBQSxXQUFXQSxXQUFXQSxpQkFBa0JBLElBVGxDQSxRQUFBQSxVQ0RWLElBQVVBLFFBQVYsU0FBVUEsR0FFS0EsRUFBQUEsWUFBY0EsUUFBUUEsT0FBT0Esa0JBRmxDQSxRQUFBQSxVQ0ZWLElBQVVBLFFBQVYsU0FBVUEsR0FFTkEsR0FBQUEsR0FBQUEsV0FHSUcsUUFBQUEsR0FBb0JBLEdBSHhCQyxHQUFBQSxHQUFBQSxJQUd3QkEsTUFBQUEsTUFBQUEsRUFFaEJBLEVBQU1BLElBQUlBLGNBQ0xBLEtBQUtBLFNBQUNBLEdBQ0hBLEVBQUtBLE1BQVFBLEVBQVNBLE9BS3RDRCxNQ3NESUUsR0FBZUMsU0FBVyxTRHREOUJILElBRUFILEdBQUFBLFlBQVlBLFdBQVdBLGlCQUFrQkEsSUFoQm5DQSxRQUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgdmFyIGRlcHMgPSBbXG4gICAgICAgIFwidWkucm91dGVyXCIsXG4gICAgICAgIFwidG9kb3Mucm9vdFwiLFxuICAgICAgICBcInRvZG9zLm1haW5cIlxuICAgIF1cbiAgICBleHBvcnQgdmFyIGFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3NcIiwgZGVwcyk7XG5cbiAgICBhcHBNb2R1bGUuY29uZmlnKFxuICAgICAgICAoJHN0YXRlUHJvdmlkZXI6IGFuZ3VsYXIudWkuSVN0YXRlUHJvdmlkZXIsXG4gICAgICAgICR1cmxSb3V0ZXJQcm92aWRlcjogYW5ndWxhci51aS5JVXJsUm91dGVyUHJvdmlkZXIpID0+IHtcblxuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLnN0YXRlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcInJvb3RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL1wiLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInJvb3Qvcm9vdC5odG1sXCIsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogXCJSb290Q29udHJvbGxlclwiLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogXCJyb290Q3RybFwiXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKFwiL1wiKTtcblxuICAgIH0pXG5cbn1cbiIsIi8qKlxuICogQ3JlYXRlZCBieSBjaHJpc2hhIG9uIDAzLzA5LzE1LlxuICovXG5cbm5hbWVzcGFjZSBUb0RvcyB7XG5cbiAgICBleHBvcnQgdmFyIHJvb3RNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZShcInRvZG9zLnJvb3RcIiwgW10pO1xuXG59IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGNocmlzaGEgb24gMDMvMDkvMTUuXG4gKi9cblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIm1vZHVsZS50c1wiIC8+XG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgY2xhc3MgUm9vdENvbnRyb2xsZXIge1xuICAgICAgICBwdWJsaWMgbWVzc2FnZXM6IHN0cmluZ1tdID0gW1xuICAgICAgICAgICAgXCJXZWxjb21lXCIsXG4gICAgICAgICAgICBcIk5ldyB2ZXJzaW9uIGlzIG91dFwiXG4gICAgICAgIF07XG4gICAgfVxuXG4gICAgcm9vdE1vZHVsZS5jb250cm9sbGVyKFwiUm9vdENvbnRyb2xsZXJcIiwgUm9vdENvbnRyb2xsZXIpXG59XG4iLCIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgZXhwb3J0IHZhciB0b2Rvc01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3MubWFpblwiLCBbXSk7XG5cbn1cbiIsIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJtb2R1bGUudHNcIiAvPlxuXG5uYW1lc3BhY2UgVG9Eb3Mge1xuXG4gICAgY2xhc3MgTGlzdENvbnRyb2xsZXIge1xuICAgICAgICBwdWJsaWMgdG9kb3M6IGFueSBbXTtcblxuICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlICRodHRwOiBhbmd1bGFyLklIdHRwQmFja2VuZFNlcnZpY2UpIHtcblxuICAgICAgICAgICAgJGh0dHAuZ2V0KFwiL2FwaS90b2Rvc1wiKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZG9zID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHRvZG9zTW9kdWxlLmNvbnRyb2xsZXIoXCJMaXN0Q29udHJvbGxlclwiLCBMaXN0Q29udHJvbGxlcik7XG5cbn0iLCIvKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBkZXBzID0gW1xuICAgICAgICBcInVpLnJvdXRlclwiLFxuICAgICAgICBcInRvZG9zLnJvb3RcIixcbiAgICAgICAgXCJ0b2Rvcy5tYWluXCJcbiAgICBdO1xuICAgIFRvRG9zLmFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwidG9kb3NcIiwgZGVwcyk7XG4gICAgVG9Eb3MuYXBwTW9kdWxlLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLnN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IFwicm9vdFwiLFxuICAgICAgICAgICAgdXJsOiBcIi9cIixcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcInJvb3Qvcm9vdC5odG1sXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBcIlJvb3RDb250cm9sbGVyXCIsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6IFwicm9vdEN0cmxcIlxuICAgICAgICB9KTtcbiAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XG4gICAgfSk7XG59KShUb0RvcyB8fCAoVG9Eb3MgPSB7fSkpO1xuXG4vKipcbiAqIENyZWF0ZWQgYnkgY2hyaXNoYSBvbiAwMy8wOS8xNS5cbiAqL1xudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIFRvRG9zLnJvb3RNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZShcInRvZG9zLnJvb3RcIiwgW10pO1xufSkoVG9Eb3MgfHwgKFRvRG9zID0ge30pKTtcblxuLyoqXG4gKiBDcmVhdGVkIGJ5IGNocmlzaGEgb24gMDMvMDkvMTUuXG4gKi9cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCJtb2R1bGUudHNcIiAvPlxudmFyIFRvRG9zO1xuKGZ1bmN0aW9uIChUb0Rvcykge1xuICAgIHZhciBSb290Q29udHJvbGxlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIFJvb3RDb250cm9sbGVyKCkge1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlcyA9IFtcbiAgICAgICAgICAgICAgICBcIldlbGNvbWVcIixcbiAgICAgICAgICAgICAgICBcIk5ldyB2ZXJzaW9uIGlzIG91dFwiXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBSb290Q29udHJvbGxlcjtcbiAgICB9KSgpO1xuICAgIFRvRG9zLnJvb3RNb2R1bGUuY29udHJvbGxlcihcIlJvb3RDb250cm9sbGVyXCIsIFJvb3RDb250cm9sbGVyKTtcbn0pKFRvRG9zIHx8IChUb0RvcyA9IHt9KSk7XG5cbi8qKlxuICogQ3JlYXRlZCBieSBjaHJpc2hhIG9uIDAzLzA5LzE1LlxuICovXG52YXIgVG9Eb3M7XG4oZnVuY3Rpb24gKFRvRG9zKSB7XG4gICAgVG9Eb3MudG9kb3NNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZShcInRvZG9zLm1haW5cIiwgW10pO1xufSkoVG9Eb3MgfHwgKFRvRG9zID0ge30pKTtcblxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIm1vZHVsZS50c1wiIC8+XG52YXIgVG9Eb3M7XG4oZnVuY3Rpb24gKFRvRG9zKSB7XG4gICAgdmFyIExpc3RDb250cm9sbGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gTGlzdENvbnRyb2xsZXIoJGh0dHApIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLiRodHRwID0gJGh0dHA7XG4gICAgICAgICAgICAkaHR0cC5nZXQoXCIvYXBpL3RvZG9zXCIpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMudG9kb3MgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIExpc3RDb250cm9sbGVyO1xuICAgIH0pKCk7XG4gICAgVG9Eb3MudG9kb3NNb2R1bGUuY29udHJvbGxlcihcIkxpc3RDb250cm9sbGVyXCIsIExpc3RDb250cm9sbGVyKTtcbn0pKFRvRG9zIHx8IChUb0RvcyA9IHt9KSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=