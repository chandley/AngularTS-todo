var ToDos;!function(o){var t=["ui.router","todos.root","todos.main"];o.appModule=angular.module("todos",t),o.appModule.config(["$stateProvider","$urlRouterProvider",function(o,t){o.state({name:"root",url:"/",templateUrl:"root/root.html",controller:"RootController",controllerAs:"rootCtrl"}),t.otherwise("/")}])}(ToDos||(ToDos={}));var ToDos;!function(o){o.rootModule=angular.module("todos.root",[])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(){this.messages=["Welcome","New version is out"],this.showMessages=!0}return o.prototype.toggleMessages=function(){this.showMessages=!this.showMessages},o}();o.rootModule.controller("RootController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){var t=["ui.router","ui.bootstrap"];o.todosModule=angular.module("todos.main",t),o.todosModule.config(["$stateProvider",function(o){o.state({name:"root.todos",url:"todos",templateUrl:"/todos/list.html",controller:"ListController",controllerAs:"listCtrl"})}])}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o,t){this.todoService=o,this.$modalInstance=t}return o.$inject=["todoService","$modalInstance"],o.prototype.save=function(){var o=this,t={id:Date.now().toString(),text:this.text,created:moment().toISOString()};this.todoService.add(t).then(function(){o.$modalInstance.close()})},o}();o.todosModule.controller("AddNewController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o,t,e){this.todoService=o,this.$window=t,this.$modal=e,this.load()}return o.$inject=["todoService","$window","$modal"],o.prototype.load=function(){var o=this;this.todoService.list().then(function(t){o.todos=t})["catch"](function(t){o.$window.console.log(t)})},o.prototype.addNew=function(){var o=this;this.$modal.open({controller:"AddNewController",controllerAs:"addNewCtrl",templateUrl:"/todos/addnew.html",backdrop:"static"}).result.then(function(){o.load()})},o}();o.todosModule.controller("ListController",t)}(ToDos||(ToDos={}));var ToDos;!function(o){var t=function(){function o(o){this.$http=o}return o.$inject=["$http"],o.prototype.list=function(){return this.$http.get("/api/todos").then(function(o){return o.data})},o.prototype.add=function(o){return this.$http.post("/api/todos",o).then(function(o){return o.data})},o}();o.ToDoService=t,o.todosModule.service("todoService",t)}(ToDos||(ToDos={}));
//# sourceMappingURL=data:application/json;base64,